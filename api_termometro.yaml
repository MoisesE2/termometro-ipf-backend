openapi: 3.0.0
info:
  title: API Termômetro de Arrecadação
  description: >
    API RESTFul e WebSocket para acompanhamento em tempo real do progresso de uma meta de arrecadação.
    Inclui endpoints para visualização e endpoints adminstrativos para gerenciamento
  version: 1.0.0
servers:
  - url: https://api.seutermometro.com/v1
    description: Servidor de Produção
  - url: http://localhost:3000/v1
    description: Servidor de Desenvolvimento Local
tags:
  - name: Status Público
    description: Endpoints para consulta do status do termômetro (Acesso Público)
  - name: Autenticação
    description: Endpoints para login de administradores.
  - name: Gerencimento de Cotas (Admin)
    description: Endpoints para gerenciamento de cotas de arrecadação (Acesso Restrito).
  - name: Gerenciamento de Metas (Admin)
    description: Endpoints para ajustar a meta e reiniciar o termômetro (Acesso Restrito).

paths:
  /auth/login:
    post:
      tags:
        - Autenticação
      summary: Autenticar Administrador
      description: Autentica um usuario administrador e retorna um token JWT para acesso e endpoints restritos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Credenciais inválidas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Credenciais inválidas. Verifique seu email e senha."
        '500':
          description: Erro interno do servidor.
  /admin/cotas:
    post:
      tags:
        - Gerencimento de Cotas (Admin)
      summary: Criar Nova Cota
      description: Cria uma nova cota de arrecadação para o termômetro.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CotaRequest'
      responses:
        '201':
          description: Cota criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CotaResponse'
        '400':
          description: Dados inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dados inválidos. Verifique os campos e tente novamente."
        '401':
          description: Não autorizado. Token JWT inválido ou ausente.
        '500':
          description: Erro interno do servidor.
    get:
      tags:
        - Gerencimento de Cotas (Admin)
      summary: Listar Cotas
      description: Retorna a lista de todas as cotas de arrecadação.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de cotas retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CotaResponse'
        '401':
          description: Não autorizado. Token JWT inválido ou ausente.
        '500':
          description: Erro interno do servidor.
    delete:
      tags:
        - Gerencimento de Cotas (Admin)
      summary: Excluir Cota
      description: Exclui uma cota de arrecadação pelo ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID da cota a ser excluída.
      responses:
        '204':
          description: Cota excluída com sucesso.
        '400':
          description: ID inválido ou não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ID inválido ou não encontrado."
        '401':
          description: Não autorizado. Token JWT inválido ou ausente.
        '500':
          description: Erro interno do servidor.
  /admin/metas:
    post:
      tags:
        - Gerenciamento de Metas (Admin)
      summary: Ajustar Meta
      description: Ajusta a meta de arrecadação do termômetro.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaRequest'
      responses:
        '200':
          description: Meta ajustada com sucesso.
          content:
            application/json: {}
        '400':
          description: Dados inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dados inválidos. Verifique os campos e tente novamente."
        '401':
          description: Não autorizado. Token JWT inválido ou ausente.
        '500':
          description: Erro interno do servidor.
    get:
      tags:
        - Gerenciamento de Metas (Admin)
      summary: Obter Meta Atual
      description: Retorna a meta de arrecadação atual do termômetro.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Meta retornada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
        '401':
          description: Não autorizado. Token JWT inválido ou ausente.
        '500':
          description: Erro interno do servidor.